#!/bin/bash
#Replace MACs with those of your controller(s).
controller1=<MAC OF CONTROLLER #1>
controller2=<MAC OF CONTROLLER #2>
pythonPath=<PATH TO PYTHON SCRIPT>

anyConnect=$(hcitool con | grep "$controller1\|$controller2" | grep "state 1" | wc -l)

counter=1

#try to connect to any controller if none are connected
#longest this will run is 55 seconds
while [ $anyConnect -eq 0 ] && [ $counter -lt 6 ]
do
#Replace MACs with those of your controller(s).
 bluetoothctl -- connect $controller1
 sleep 5
 bluetoothctl -- connect $controller2
 sleep 5

 ((counter++))
 #Replace MACs with those of your controller(s).
 anyConnect=$(hcitool con | grep "$controller1\|$controller2" | grep "state 1" | wc -l)
done

#If there is 1 controller connected, listen for the touchpad button to be pressed
if [ $anyConnect -eq 1 ]
then
 #check to see which controller is connected
 #Replace MACs with those of your controller(s).
 oneConnect=$(hcitool con | grep "$controller1" | grep "state 1" | wc -l)

 #check to see if already scanning for input, and if so kill the process
 buttonPressProcID=$(ps -aelf | grep "python $pythonPath" | grep "poll_s")
 array=($buttonPressProcID)
 procID=$(eval echo ${array[@]:3:1})
 if [ ! -z "$procID" ]
 then
  kill $procID
 fi

 #check for touchpad button press
 buttonPress=$(python $pythonPath)
 if [ $buttonPress -eq 1 ]
 then
  counter=1
  #for next 15 seconds try to connect to other controller
  while [ $anyConnect -eq 1 ] && [ $counter -lt 3 ]
  do
   if [ $oneConnect -eq 1 ]
   then
    #Replace MACs with those of your controller(s).
    bluetoothctl -- connect $controller2
   else
    bluetoothctl -- connect $controller1
   fi
   sleep 5
   ((counter++))
   anyConnect=$(hcitool con | grep "$controller1\|$controller2" | grep "state 1" | wc -l)
  done
 fi
fi
